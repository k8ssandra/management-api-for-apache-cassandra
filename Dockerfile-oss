ARG CASSANDRA_VERSION=3.11.16

FROM --platform=$BUILDPLATFORM maven:3.8.7-eclipse-temurin-11 as builder

ARG METRICS_COLLECTOR_VERSION=0.3.5
ARG CDC_AGENT_VERSION=2.2.9
ARG CDC_AGENT_EDITION=agent-c3

WORKDIR /build
ENV MAAC_PATH /opt/management-api

COPY pom.xml ./
COPY management-api-agent-shaded-libs/pom.xml ./management-api-agent-shaded-libs/pom.xml
COPY management-api-agent-common/pom.xml ./management-api-agent-common/pom.xml
COPY management-api-agent-3.x/pom.xml ./management-api-agent-3.x/pom.xml
COPY management-api-agent-4.x/pom.xml ./management-api-agent-4.x/pom.xml
COPY management-api-agent-4.1.x/pom.xml ./management-api-agent-4.1.x/pom.xml
COPY management-api-agent-5.0.x/pom.xml ./management-api-agent-5.0.x/pom.xml
COPY management-api-common/pom.xml ./management-api-common/pom.xml
COPY management-api-server/pom.xml ./management-api-server/pom.xml
# this duplicates work done in the next steps, but this should provide
# a solid cache layer that only gets reset on pom.xml changes
RUN mvn -q -ff -T 1C install -DskipOpenApi && rm -rf target

COPY management-api-agent-shaded-libs ./management-api-agent-shaded-libs
COPY management-api-agent-common ./management-api-agent-common
COPY management-api-agent-3.x ./management-api-agent-3.x
COPY management-api-agent-4.x ./management-api-agent-4.x
COPY management-api-agent-4.1.x ./management-api-agent-4.1.x
COPY management-api-agent-5.0.x ./management-api-agent-5.0.x
COPY management-api-common ./management-api-common
COPY management-api-server ./management-api-server
RUN mkdir -m 775 ${MAAC_PATH} && \
    mvn -q -ff package -DskipTests -DskipOpenApi && \
    find /build -type f -name "datastax-*.jar" -exec mv -t $MAAC_PATH -i '{}' + && \
    rm $MAAC_PATH/datastax-mgmtapi-agent-4* && \
    rm $MAAC_PATH/datastax-mgmtapi-agent-5* && \
    rm $MAAC_PATH/datastax-mgmtapi-*shaded* && \
    rm $MAAC_PATH/datastax-mgmtapi-*common* && \
    cd ${MAAC_PATH} && \
    ln -s datastax-mgmtapi-agent-3.x-0.1.0-SNAPSHOT.jar datastax-mgmtapi-agent-0.1.0-SNAPSHOT.jar && \
    ln -s datastax-mgmtapi-agent-0.1.0-SNAPSHOT.jar datastax-mgmtapi-agent.jar && \
    ln -s datastax-mgmtapi-server-0.1.0-SNAPSHOT.jar datastax-mgmtapi-server.jar && \
    chmod -R g+w ${MAAC_PATH}

# Download and extract Metrics Collector
ENV MCAC_PATH /opt/metrics-collector
RUN mkdir -m 775 ${MCAC_PATH} && \
    if test ! -e datastax-mcac-agent-${METRICS_COLLECTOR_VERSION}.tar.gz; then curl -L -O "https://github.com/datastax/metric-collector-for-apache-cassandra/releases/download/v${METRICS_COLLECTOR_VERSION}/datastax-mcac-agent-${METRICS_COLLECTOR_VERSION}.tar.gz"; fi && \
    tar --directory ${MCAC_PATH} --strip-components 1 --gzip --extract --file datastax-mcac-agent-${METRICS_COLLECTOR_VERSION}.tar.gz && \
    chmod -R g+w ${MCAC_PATH}
# Download CDC agent
ENV CDC_AGENT_PATH=/opt/cdc_agent
RUN mkdir -m 775 ${CDC_AGENT_PATH} && \
  curl -L -O "https://github.com/datastax/cdc-apache-cassandra/releases/download/v${CDC_AGENT_VERSION}/${CDC_AGENT_EDITION}-${CDC_AGENT_VERSION}-all.jar" && \
  mv ${CDC_AGENT_EDITION}-${CDC_AGENT_VERSION}-all.jar ${CDC_AGENT_PATH}/cdc-agent.jar && \
  chmod -R g+w ${CDC_AGENT_PATH}

ENV USER_HOME_PATH /home/cassandra
RUN mkdir -m 775 ${USER_HOME_PATH}

FROM --platform=$BUILDPLATFORM maven:3.6.3-jdk-8-slim as netty4150
RUN mvn dependency:get -DgroupId=io.netty -DartifactId=netty-all -Dversion=4.1.50.Final -Dtransitive=false

FROM --platform=linux/amd64 cassandra:${CASSANDRA_VERSION} as oss311-amd64

FROM --platform=linux/arm64 cassandra:${CASSANDRA_VERSION} as oss311-arm64
# Netty arm64 epoll support was not added until 4.1.50 (https://github.com/netty/netty/pull/9804)
# Only replace this dependency for arm64 to avoid regressions
RUN rm /opt/cassandra/lib/netty-all-*.jar
COPY --from=netty4150 --chown=cassandra:root /root/.m2/repository/io/netty/netty-all/4.1.50.Final/netty-all-4.1.50.Final.jar /opt/cassandra/lib/netty-all-4.1.50.Final.jar

FROM oss311-${TARGETARCH} as oss311

ARG TARGETARCH

LABEL maintainer="DataStax, Inc <info@datastax.com>"
LABEL name="Apache Cassandra"
LABEL vendor="DataStax, Inc"
LABEL release="${CASSANDRA_VERSION}"
LABEL summary="Apache Cassandra is an open source distributed database management system designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure. Cassandra offers robust support for clusters spanning multiple datacenters, with asynchronous masterless replication allowing low latency operations for all clients."
LABEL description="Apache Cassandra is an open source distributed database management system designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure. Cassandra offers robust support for clusters spanning multiple datacenters, with asynchronous masterless replication allowing low latency operations for all clients."

ENV CASSANDRA_PATH /opt/cassandra
ENV MAAC_PATH /opt/management-api
ENV MCAC_PATH /opt/metrics-collector
ENV CDC_AGENT_PATH=/opt/cdc_agent
ENV USER_HOME_PATH /home/cassandra

ENV CASSANDRA_HOME ${CASSANDRA_PATH}
ENV CASSANDRA_CONF ${CASSANDRA_PATH}/conf
ENV CASSANDRA_LOGS ${CASSANDRA_PATH}/logs
# Log directory for Management API startup logs to avoid issues:
# https://datastax.jira.com/browse/DB-4627
# https://issues.apache.org/jira/browse/CASSANDRA-16027
ENV MGMT_API_LOG_DIR /var/log/cassandra

COPY --from=builder --chown=cassandra:root ${MAAC_PATH} ${MAAC_PATH}
COPY --from=builder --chown=cassandra:root ${MCAC_PATH} ${MCAC_PATH}
COPY --from=builder --chown=cassandra:root ${USER_HOME_PATH} ${USER_HOME_PATH}
COPY --from=builder --chown=cassandra:root ${CDC_AGENT_PATH} ${CDC_AGENT_PATH}

# Setup user and fixup permissions
RUN chown -R cassandra:root ${CASSANDRA_PATH} && chmod -R g+w ${CASSANDRA_PATH} && \
    # we don't need recursive chnages here because the files in the directories already have group write
    chmod g+w ${MAAC_PATH} ${MCAC_PATH} ${USER_HOME_PATH} ${CDC_AGENT_PATH}

ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} /tini
RUN chmod +x /tini
RUN set -eux; \
  rm -fr /etc/apt/sources.list.d/*; \
  rm -rf /var/lib/apt/lists/*; \
  apt-get update; \
  apt-get install -y --no-install-recommends wget iproute2; \
  rm -rf /var/lib/apt/lists/*

# backwards compat with upstream ENTRYPOINT
COPY scripts/docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh && \
  ln -sf /usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh && \
# fix for the missing mtab in the containerd
  ln -sf /proc/mounts /etc/mtab

EXPOSE 9103 9000
EXPOSE 8080

USER cassandra

ENTRYPOINT ["/tini", "-g", "--", "/docker-entrypoint.sh"]
CMD ["mgmtapi"]
