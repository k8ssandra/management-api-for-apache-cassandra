ARG DSE_VERSION=6.8.43
ARG UBI_MAJOR=8
ARG UBI_BASETAG=latest

FROM datastax/dse-mgmtapi-6_8:${DSE_VERSION} AS dse-server-base

FROM --platform=$BUILDPLATFORM maven:3.8.7-eclipse-temurin-11 as mgmtapi-setup

WORKDIR /

ENV MAAC_PATH /opt/management-api
ENV DSE_HOME /opt/dse

COPY pom.xml /tmp/pom.xml
COPY management-api-agent-shaded-libs/pom.xml /tmp/management-api-agent-shaded-libs/pom.xml
COPY management-api-agent-common/pom.xml /tmp/management-api-agent-common/pom.xml
COPY management-api-agent-3.x/pom.xml /tmp/management-api-agent-3.x/pom.xml
COPY management-api-agent-4.x/pom.xml /tmp/management-api-agent-4.x/pom.xml
COPY management-api-agent-4.1.x/pom.xml /tmp/management-api-agent-4.1.x/pom.xml
COPY management-api-agent-5.0.x/pom.xml /tmp/management-api-agent-5.0.x/pom.xml
COPY management-api-agent-dse-6.8/pom.xml tmp/management-api-agent-dse-6.8/pom.xml
COPY management-api-common/pom.xml /tmp/management-api-common/pom.xml
COPY management-api-server/pom.xml /tmp/management-api-server/pom.xml
COPY settings.xml settings.xml /root/.m2/
# this duplicates work done in the next steps, but this should provide
# a solid cache layer that only gets reset on pom.xml changes
RUN cd /tmp && mvn -q -ff -T 1C install -DskipOpenApi -P dse && rm -rf target

COPY management-api-agent-shaded-libs /tmp/management-api-agent-shaded-libs
COPY management-api-agent-common /tmp/management-api-agent-common
COPY management-api-agent-3.x /tmp/management-api-agent-3.x
COPY management-api-agent-4.x /tmp/management-api-agent-4.x
COPY management-api-agent-4.1.x /tmp/management-api-agent-4.1.x
COPY management-api-agent-5.0.x /tmp/management-api-agent-5.0.x
COPY management-api-agent-dse-6.8 /tmp/management-api-agent-dse-6.8
COPY management-api-common /tmp/management-api-common
COPY management-api-server /tmp/management-api-server
RUN mkdir -m 775 $MAAC_PATH \
    && cd /tmp \
    && mvn -q -ff package -DskipTests  -DskipOpenApi -P dse \
    && find /tmp -type f -name "datastax-*.jar" -exec mv -t $MAAC_PATH -i '{}' + \
    && rm $MAAC_PATH/datastax-mgmtapi-agent-3* \
    && rm $MAAC_PATH/datastax-mgmtapi-agent-4* \
    && rm $MAAC_PATH/datastax-mgmtapi-agent-5* \
    && rm $MAAC_PATH/datastax-mgmtapi-*shaded* \
    && rm $MAAC_PATH/datastax-mgmtapi-*common* \
    && cd ${MAAC_PATH} \
    && ln -s datastax-mgmtapi-agent-dse-6.8-0.1.0-SNAPSHOT.jar datastax-mgmtapi-agent-0.1.0-SNAPSHOT.jar \
    && ln -s datastax-mgmtapi-agent-0.1.0-SNAPSHOT.jar datastax-mgmtapi-agent.jar \
    && ln -s datastax-mgmtapi-server-0.1.0-SNAPSHOT.jar datastax-mgmtapi-server.jar && \
    chmod -R g+w ${MAAC_PATH}

#############################################################

# Using UBI8 with Python 2 support, eventually we may switch to Python 3
FROM registry.access.redhat.com/ubi${UBI_MAJOR}/ubi-minimal:${UBI_BASETAG} as dse68
ARG DSE_VERSION
ENV DSE_VERSION=${DSE_VERSION}

LABEL maintainer="DataStax, Inc <info@datastax.com>"
LABEL name="dse-server"
LABEL vendor="DataStax, Inc"
LABEL release="${DSE_VERSION}"
LABEL summary="The best distribution of Apache Cassandra™ with integrated Search, Analytics, and Graph capabilities"
LABEL description="Built on the best distribution of Apache Cassandra™, DataStax Enterprise is the always-on database designed to allow you to effortlessly build and scale your apps, integrating graph, search, analytics, administration, developer tooling, and monitoring into a single unified platform. We power your apps' real-time moments so you can create instant insights and powerful customer experiences."

ENV DSE_HOME /opt/dse
ENV PATH $DSE_HOME/bin:$PATH
ENV HOME $DSE_HOME

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'

# Install runtime dependencies and updates
RUN microdnf update && rm -rf /var/cache/yum && \
    microdnf install --nodocs -y java-1.8.0-openjdk-headless java-1.8.0-openjdk-devel python2 zlib libaio which findutils hostname iproute shadow-utils procps util-linux glibc-langpack-en wget && microdnf clean all

WORKDIR $HOME

# Copy user accounts information
COPY --from=dse-server-base /etc/passwd /etc/passwd
COPY --from=dse-server-base /etc/shadow /etc/shadow
COPY --from=dse-server-base /etc/group /etc/group
COPY --from=dse-server-base /etc/gshadow /etc/gshadow

# Copy trimmed installation
COPY --chown=dse:root --from=dse-server-base ${DSE_HOME} ${DSE_HOME}
COPY --chown=dse:root --from=dse-server-base /base-checks.sh /base-checks.sh

# Copy license in to appropriate directory
COPY --from=dse-server-base /LICENSE /licenses/

# Replace bin/cassandra with modified that doesn't hang in k8s
COPY --chown=dse:root dse-68/files/cassandra ${DSE_HOME}/resources/cassandra/bin/cassandra
COPY --chown=dse:root dse-68/files/entrypoint.sh /entrypoint.sh
copy --chown=dse:root dse-68/files/overwritable-conf-files /overwritable-conf-files
# Update permissions and build directories
RUN chmod 0555 /entrypoint.sh /overwritable-conf-files /licenses /base-checks.sh && \
    (for dir in /var/lib/cassandra \
                /var/lib/spark \
                /var/lib/dsefs \
                /var/lib/datastax-agent \
                /var/log/cassandra \
                /var/log/spark \
                /config \
                /licenses ; do \
        mkdir -p $dir && chown -R dse:root $dir && chmod 775 $dir ; \
    done )

# Use OSS Management API
ENV CASSANDRA_CONF ${DSE_HOME}/resources/cassandra/conf
ENV MAAC_PATH /opt/management-api
COPY --chown=dse:root --from=mgmtapi-setup $MAAC_PATH $MAAC_PATH
# Add CDC Agent
ENV CDC_AGENT_PATH=/opt/cdc_agent
COPY --chown=dse:root --from=dse-server-base $CDC_AGENT_PATH $CDC_AGENT_PATH

# Adjust directories for ldconfig usage
RUN chmod g+w /etc /etc/ld.so.cache  && \
    # still need to change the mode of the COPY directories, though this does not duplicate layers
    chmod g+w ${MAAC_PATH} ${DSE_HOME} ${CDC_AGENT_PATH}

# Set user to run as
USER dse:root

# Expose DSE folders
VOLUME ["/var/lib/cassandra", "/var/lib/spark", "/var/lib/dsefs", "/var/log/cassandra", "/var/log/spark"]

# CASSANDRA PORTS (INTRA-NODE, TLS INTRA-NODE, JMX, CQL, THRIFT, DSEFS INTRA-NODE, INTRA-NODE MESSAGING SERVICE)
EXPOSE 7000 7001 7199 8609 9042 9160

# DSE SEARCH (SOLR)
EXPOSE 8983 8984

# DSE ANALYTICS (SPARK)
EXPOSE 4040 7077 7080 7081 8090 9999 18080

# DSE GRAPH
EXPOSE 8182

# DSEFS
EXPOSE 5598 5599

# TODO determine uses this port
EXPOSE 10000

# DSE METRICS REPORTER PORT
EXPOSE 9103 9000

# Run DSE in foreground by default
ENTRYPOINT [ "/entrypoint.sh", "dse", "cassandra", "-f", "-R" ]
