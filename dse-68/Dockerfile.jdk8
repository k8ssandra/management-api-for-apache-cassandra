# Copyright DataStax, Inc, 2017
#   Please review the included LICENSE file for more information.
#
ARG DS_BASE_DEBIAN=ds-base-debian-openjdk-8
ARG BASETAG=8u322-jdk-slim-buster-20220411
FROM datastax/${DS_BASE_DEBIAN}:${BASETAG} AS dse-server-prep

# Set up configuration variables
ENV DSE_HOME /opt/dse
ENV DSE_AGENT_HOME /opt/agent

# Get commandline parameters
ARG DSE_VERSION=6.8.39
ARG URL_PREFIX=https://downloads.datastax.com/enterprise
ARG TARBALL=dse-${DSE_VERSION}-bin.tar.gz
ARG DOWNLOAD_URL=${URL_PREFIX}/${TARBALL}

ARG DSE_AGENT_VERSION=6.8.26
ARG DSE_AGENT_TARBALL=datastax-agent-${DSE_AGENT_VERSION}.tar.gz
ARG DSE_AGENT_DOWNLOAD_URL=${URL_PREFIX}/${DSE_AGENT_TARBALL}

COPY dse-68/* /

RUN set -x \
# Download DSE tarball if needed
    && if test ! -e /${TARBALL}; then wget -nv --show-progress --progress=bar:force:noscroll -O /${TARBALL} ${DOWNLOAD_URL} ; fi \
# Unpack tarball
    && mkdir -p "$DSE_HOME" \
    && tar -C "$DSE_HOME" --strip-components=1 -xzf /${TARBALL} \
    && rm /${TARBALL} \
# Download Agent tarball if needed
    && if test ! -e /${DSE_AGENT_TARBALL}; then wget -nv --show-progress --progress=bar:force:noscroll -O /${DSE_AGENT_TARBALL} ${DSE_AGENT_DOWNLOAD_URL} ; fi \
    && mkdir -p "$DSE_AGENT_HOME" \
    && tar -C "$DSE_AGENT_HOME" --strip-components=1 -xzf /${DSE_AGENT_TARBALL} \
    && rm /${DSE_AGENT_TARBALL} \
# Use hard links to reduce the size impact of duplicate jars
    && apt-get update \
    && apt-get install -y --install-recommends rdfind \
    && rdfind -makehardlinks true -makeresultsfile false ${DSE_HOME} \
    && chmod -R g+w ${DSE_HOME} ${DSE_AGENT_HOME}

#############################################################

# The commented section below is what would be used to bundle the Management API
# released artifacts into the DSE image. Since images built in this project are
# being used to test the artifacts, we want to build them from source and embed
# them into the image

#FROM debian:buster as mgmtapi-setup
#
#WORKDIR /
#
#ENV MAAC_PATH /opt/management-api
#ENV DSE_HOME /opt/dse
#
#ENV MGMTAPI_V=v0.1.45
#
#RUN \
#  set -x \
#  && apt-get update -y \
#  && apt-get install -y wget unzip \
#  && mkdir $MAAC_PATH \
#  && mkdir $DSE_HOME \
#  && mkdir /tmp/mgmtapi-jars \
#  && cd /tmp/mgmtapi-jars \
#  && wget -q "https://github.com/datastax/management-api-for-apache-cassandra/releases/download/$MGMTAPI_V/jars.zip" \
#  && unzip jars.zip \
#  && rm jars.zip \
#  && find /tmp/mgmtapi-jars -name '*.jar' -type f -exec mv -t $MAAC_PATH -i '{}' + \
#  && rm $MAAC_PATH/datastax-mgmtapi-agent-3* \
#  && rm $MAAC_PATH/datastax-mgmtapi-agent-4* \
#  && cd /tmp \
#  && rm -rf /tmp/mgmtapi-jars \
#  && echo DONE

FROM --platform=$BUILDPLATFORM maven:3.8.7-eclipse-temurin-11 as mgmtapi-setup

WORKDIR /

ENV MAAC_PATH /opt/management-api
ENV DSE_HOME /opt/dse

COPY pom.xml /tmp/pom.xml
COPY management-api-agent-common/pom.xml /tmp/management-api-agent-common/pom.xml
COPY management-api-agent-3.x/pom.xml /tmp/management-api-agent-3.x/pom.xml
COPY management-api-agent-4.x/pom.xml /tmp/management-api-agent-4.x/pom.xml
COPY management-api-agent-4.1.x/pom.xml /tmp/management-api-agent-4.1.x/pom.xml
COPY management-api-agent-dse-6.8/pom.xml tmp/management-api-agent-dse-6.8/pom.xml
COPY management-api-common/pom.xml /tmp/management-api-common/pom.xml
COPY management-api-server/pom.xml /tmp/management-api-server/pom.xml
COPY settings.xml settings.xml /root/.m2/
# this duplicates work done in the next steps, but this should provide
# a solid cache layer that only gets reset on pom.xml changes
RUN cd /tmp && mvn -q -ff -T 1C install -DskipOpenApi -P dse && rm -rf target

COPY management-api-agent-common /tmp/management-api-agent-common
COPY management-api-agent-3.x /tmp/management-api-agent-3.x
COPY management-api-agent-4.x /tmp/management-api-agent-4.x
COPY management-api-agent-4.1.x /tmp/management-api-agent-4.1.x
COPY management-api-agent-dse-6.8 /tmp/management-api-agent-dse-6.8
COPY management-api-common /tmp/management-api-common
COPY management-api-server /tmp/management-api-server
RUN mkdir -m 775 $MAAC_PATH \
    && cd /tmp \
    && mvn -q -ff package -DskipTests  -DskipOpenApi -P dse \
    && find /tmp -type f -name "datastax-*.jar" -exec mv -t $MAAC_PATH -i '{}' + \
    && rm $MAAC_PATH/datastax-mgmtapi-agent-3* \
    && rm $MAAC_PATH/datastax-mgmtapi-agent-4* \
    && rm $MAAC_PATH/datastax-mgmtapi-*common* \
    && cd ${MAAC_PATH} \
    && ln -s datastax-mgmtapi-agent-dse-6.8-0.1.0-SNAPSHOT.jar datastax-mgmtapi-agent-0.1.0-SNAPSHOT.jar \
    && ln -s datastax-mgmtapi-agent-0.1.0-SNAPSHOT.jar datastax-mgmtapi-agent.jar \
    && ln -s datastax-mgmtapi-server-0.1.0-SNAPSHOT.jar datastax-mgmtapi-server.jar && \
    chmod -R g+w ${MAAC_PATH}

#############################################################

###
# Download CDC Agent jarfile
###
ARG CDC_AGENT_VERSION=2.2.9
ARG CDC_AGENT_EDITION=agent-dse4
# Download CDC agent
ENV CDC_AGENT_PATH=/opt/cdc_agent
RUN mkdir -m 775 ${CDC_AGENT_PATH} && \
  curl -L -O "https://github.com/datastax/cdc-apache-cassandra/releases/download/v${CDC_AGENT_VERSION}/${CDC_AGENT_EDITION}-${CDC_AGENT_VERSION}-all.jar" && \
  mv ${CDC_AGENT_EDITION}-${CDC_AGENT_VERSION}-all.jar ${CDC_AGENT_PATH}/cdc-agent.jar && \
  chmod -R g+w ${CDC_AGENT_PATH}

FROM datastax/${DS_BASE_DEBIAN}:${BASETAG} AS dse68
ARG DSE_VERSION
ENV DSE_VERSION=${DSE_VERSION}


LABEL maintainer="DataStax, Inc <info@datastax.com>"
LABEL name="dse-server"
LABEL vendor="DataStax, Inc"
LABEL release="${DSE_VERSION}"

ENV DSE_HOME /opt/dse
ENV DSE_AGENT_HOME /opt/agent
ENV CASSANDRA_CONF ${DSE_HOME}/resources/cassandra/conf
ENV MAAC_PATH /opt/management-api
ENV CDC_AGENT_PATH=/opt/cdc_agent

RUN set -eux; \
    apt-get update; \
    apt-get -y upgrade; \
    rm -rfv /var/lib/apt/lists/* ;

RUN set -x \
# Add DSE user
    && groupadd -r dse --gid=999 \
    && useradd -m -d "$DSE_HOME" -r -g dse -G root --uid=999 dse

COPY dse-68/files /

COPY --chown=dse:root --from=dse-server-prep $DSE_HOME $DSE_HOME
COPY --chown=dse:root --from=dse-server-prep $DSE_AGENT_HOME $DSE_AGENT_HOME

# Create folders
RUN (for dir in /var/lib/cassandra \
                /var/lib/spark \
                /var/lib/dsefs \
                /var/lib/datastax-agent \
                /var/log/cassandra \
                /var/log/spark \
                /config ; do \
        mkdir -p $dir && chown -R dse:root $dir && chmod 775 $dir ; \
    done )

# Use OSS Management API
RUN rm -rf $DSE_HOME/resources/management-api
COPY --chown=dse:root --from=mgmtapi-setup $MAAC_PATH $MAAC_PATH

# Add CDC Agent
COPY --chown=dse:root --from=mgmtapi-setup $CDC_AGENT_PATH $CDC_AGENT_PATH

# Fix COPY directory modes
RUN chmod g+w ${MAAC_PATH} ${MCAC_PATH} ${DSE_HOME} ${DSE_AGENT_HOME} ${CDC_AGENT_PATH}

ENV PATH $DSE_HOME/bin:$PATH
ENV HOME $DSE_HOME
WORKDIR $HOME

USER dse

# Expose DSE folders
VOLUME ["/var/lib/cassandra", "/var/lib/spark", "/var/lib/dsefs", "/var/log/cassandra", "/var/log/spark"]

# CASSANDRA PORTS (INTRA-NODE, TLS INTRA-NODE, JMX, CQL, THRIFT, DSEFS INTRA-NODE, INTRA-NODE MESSAGING SERVICE)
EXPOSE 7000 7001 7199 8609 9042 9160

# DSE SEARCH (SOLR)
EXPOSE 8983 8984

# DSE ANALYTICS (SPARK)
EXPOSE 4040 7077 7080 7081 8090 9999 18080

# DSE GRAPH
EXPOSE 8182

# DSEFS
EXPOSE 5598 5599

EXPOSE 10000

# DSE METRICS REPORTER PORT
EXPOSE 9103 9000

# Run DSE in foreground by default
ENTRYPOINT [ "/entrypoint.sh", "dse", "cassandra", "-f" ]
