{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "This is a Restful service for operating Apache Cassandra.  You can find out more about the Management API on [Github](http://github.com/k8ssandra/management-api-for-apache-cassandra)",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title" : "Management API for Apache Cassandraâ„¢",
    "version" : "0.1"
  },
  "paths" : {
    "/api/v0/lifecycle/configure" : {
      "post" : {
        "description" : "Configure Cassandra/DSE. Will fail if Cassandra/DSE is already started",
        "operationId" : "configureNode",
        "parameters" : [ {
          "in" : "query",
          "name" : "profile",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            },
            "application/yaml" : {
              "schema" : {
                "type" : "string"
              }
            },
            "text/yaml" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/v0/lifecycle/pid" : {
      "get" : {
        "description" : "The PID of Cassandra/DSE, if it's running",
        "operationId" : "getPID",
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/v0/lifecycle/start" : {
      "post" : {
        "description" : "Starts Cassandra/DSE",
        "operationId" : "startNode",
        "parameters" : [ {
          "in" : "query",
          "name" : "profile",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "replace_ip",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/v0/lifecycle/stop" : {
      "post" : {
        "description" : "Stops Cassandra/DSE. Keeps node from restarting automatically until /start is called",
        "operationId" : "stopNode",
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/v0/metadata/endpoints" : {
      "get" : {
        "operationId" : "getEndpointStates",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Returns this nodes view of the endpoint states of nodes"
      }
    },
    "/api/v0/metadata/localdc" : {
      "get" : {
        "operationId" : "getLocalDataCenter",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Returns the DataCenter the local node belongs to"
      }
    },
    "/api/v0/metadata/versions/features" : {
      "get" : {
        "operationId" : "getFeatureSet",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Returns the management-api featureSet"
      }
    },
    "/api/v0/metadata/versions/release" : {
      "get" : {
        "operationId" : "getReleaseVersion",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Returns the Cassandra release version"
      }
    },
    "/api/v0/ops/auth/role" : {
      "post" : {
        "operationId" : "createRole",
        "parameters" : [ {
          "in" : "query",
          "name" : "username",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "is_superuser",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "can_login",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "password",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Creates a new user role"
      }
    },
    "/api/v0/ops/executor/job" : {
      "get" : {
        "operationId" : "getJobStatus",
        "parameters" : [ {
          "in" : "query",
          "name" : "job_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Returns Job deatils for the supplied Job ID"
      }
    },
    "/api/v0/ops/keyspace" : {
      "get" : {
        "operationId" : "listKeyspaces",
        "parameters" : [ {
          "in" : "query",
          "name" : "keyspaceName",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "List the keyspaces existing in the cluster"
      }
    },
    "/api/v0/ops/keyspace/alter" : {
      "post" : {
        "operationId" : "alterKeyspace",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrAlterKeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Alter the replication settings of an existing keyspace"
      }
    },
    "/api/v0/ops/keyspace/cleanup" : {
      "post" : {
        "operationId" : "cleanup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Triggers the immediate cleanup of keys no longer belonging to a node. By default, clean all keyspaces. This operation is blocking and will return the executed job after finishing."
      }
    },
    "/api/v0/ops/keyspace/create" : {
      "post" : {
        "operationId" : "createKeyspace",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateOrAlterKeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Create a new keyspace with the given name and replication settings"
      }
    },
    "/api/v0/ops/keyspace/refresh" : {
      "post" : {
        "operationId" : "refresh",
        "parameters" : [ {
          "in" : "query",
          "name" : "keyspaceName",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "table",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Load newly placed SSTables to the system without restart"
      }
    },
    "/api/v0/ops/keyspace/replication" : {
      "get" : {
        "operationId" : "replication",
        "parameters" : [ {
          "in" : "query",
          "name" : "keyspaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get the replication settings of an existing keyspace"
      }
    },
    "/api/v0/ops/node/assassinate" : {
      "post" : {
        "operationId" : "assassinate",
        "parameters" : [ {
          "in" : "query",
          "name" : "address",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Forcefully remove a dead node without re-replicating any data. Use as a last resort if you cannot removenode"
      }
    },
    "/api/v0/ops/node/compaction" : {
      "post" : {
        "operationId" : "setCompactionThroughput",
        "parameters" : [ {
          "in" : "query",
          "name" : "value",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Set the MB/s throughput cap for compaction in the system, or 0 to disable throttling"
      }
    },
    "/api/v0/ops/node/decommission" : {
      "post" : {
        "operationId" : "decommission",
        "parameters" : [ {
          "in" : "query",
          "name" : "force",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Decommission the *node I am connecting to*"
      }
    },
    "/api/v0/ops/node/drain" : {
      "post" : {
        "operationId" : "drain",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Drain the node (stop accepting writes and flush all tables)"
      }
    },
    "/api/v0/ops/node/fullquerylogging" : {
      "get" : {
        "operationId" : "isFullQueryLogEnabled",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get whether full query logging is enabled."
      },
      "post" : {
        "operationId" : "setFullQuerylog",
        "parameters" : [ {
          "in" : "query",
          "name" : "enabled",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Enable or disable full query logging facility."
      }
    },
    "/api/v0/ops/node/hints/truncate" : {
      "post" : {
        "operationId" : "truncateHints",
        "parameters" : [ {
          "in" : "query",
          "name" : "host",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Truncate all hints on the local node, or truncate hints for the endpoint(s) specified."
      }
    },
    "/api/v0/ops/node/logging" : {
      "post" : {
        "operationId" : "setLoggingLevel",
        "parameters" : [ {
          "in" : "query",
          "name" : "target",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "rawLevel",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Set the log level threshold for a given component or class. Will reset to the initial configuration if called with no parameters."
      }
    },
    "/api/v0/ops/node/repair" : {
      "post" : {
        "operationId" : "repair",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/RepairRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Execute a nodetool repair operation"
      }
    },
    "/api/v0/ops/node/schema/reload" : {
      "post" : {
        "operationId" : "reloadLocalSchema",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Reload local node schema from system tables"
      }
    },
    "/api/v0/ops/node/schema/reset" : {
      "post" : {
        "operationId" : "resetLocalSchema",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Reset node's local schema and resync"
      }
    },
    "/api/v0/ops/node/snapshots" : {
      "delete" : {
        "operationId" : "clearSnapshots",
        "parameters" : [ {
          "in" : "query",
          "name" : "snapshotNames",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "keyspaces",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Clear snapshots"
      },
      "get" : {
        "operationId" : "getSnapshotDetails",
        "parameters" : [ {
          "in" : "query",
          "name" : "snapshotNames",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "in" : "query",
          "name" : "keyspaces",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Retrieve snapshot details"
      },
      "post" : {
        "operationId" : "takeSnapshot",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TakeSnapshotRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Take a snapshot"
      }
    },
    "/api/v0/ops/node/streaminfo" : {
      "get" : {
        "operationId" : "getStreamInfo",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Retrieve Streaming status information"
      }
    },
    "/api/v0/ops/seeds/reload" : {
      "post" : {
        "operationId" : "seedReload",
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Reload the seed node list from the seed provider"
      }
    },
    "/api/v0/ops/tables" : {
      "get" : {
        "operationId" : "listTables",
        "parameters" : [ {
          "in" : "query",
          "name" : "keyspaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "List the table names in the given keyspace"
      }
    },
    "/api/v0/ops/tables/compact" : {
      "post" : {
        "operationId" : "compact",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompactRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Force a (major) compaction on one or more tables or user-defined compaction on given SSTables"
      }
    },
    "/api/v0/ops/tables/create" : {
      "post" : {
        "operationId" : "createTable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTableRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Create a new table in an existing keyspace"
      }
    },
    "/api/v0/ops/tables/flush" : {
      "post" : {
        "operationId" : "flush",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Flush one or more tables"
      }
    },
    "/api/v0/ops/tables/garbagecollect" : {
      "post" : {
        "operationId" : "garbageCollect",
        "parameters" : [ {
          "in" : "query",
          "name" : "tombstoneOption",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Remove deleted data from one or more tables"
      }
    },
    "/api/v0/ops/tables/scrub" : {
      "post" : {
        "operationId" : "scrub",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScrubRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Scrub (rebuild sstables for) one or more tables"
      }
    },
    "/api/v0/ops/tables/sstables/upgrade" : {
      "post" : {
        "operationId" : "upgradeSSTables",
        "parameters" : [ {
          "in" : "query",
          "name" : "excludeCurrentVersion",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Rewrite sstables (for the requested tables) that are not on the current version (thus upgrading them to said current version)"
      }
    },
    "/api/v0/probes/cluster" : {
      "get" : {
        "operationId" : "checkClusterConsistency",
        "parameters" : [ {
          "in" : "query",
          "name" : "consistency_level",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "rf_per_dc",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Indicated whether the Cassandra cluster is able to achieve the specified consistency"
      }
    },
    "/api/v0/probes/liveness" : {
      "get" : {
        "operationId" : "checkLiveness",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Indicates whether this service is running"
      }
    },
    "/api/v0/probes/readiness" : {
      "get" : {
        "operationId" : "checkReadiness",
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Indicates whether the Cassandra service is ready to service requests"
      }
    },
    "/api/v1/ops/keyspace/cleanup" : {
      "post" : {
        "operationId" : "cleanup_v1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KeyspaceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Triggers the immediate cleanup of keys no longer belonging to a node. By default, clean all keyspaces. This operation is asynchronous and returns immediately"
      }
    },
    "/api/v1/ops/node/decommission" : {
      "post" : {
        "operationId" : "decommission_v1",
        "parameters" : [ {
          "in" : "query",
          "name" : "force",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Decommission the *node I am connecting to*. This invocation returns immediately and returns a job id."
      }
    },
    "/api/v1/ops/node/rebuild" : {
      "post" : {
        "operationId" : "rebuild_v1",
        "parameters" : [ {
          "in" : "query",
          "name" : "src_dc",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "text/plain" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Rebuild data by streaming data from other nodes. This operation returns immediately with a job id."
      }
    }
  },
  "components" : {
    "schemas" : {
      "Column" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "enum" : [ "PARTITION_KEY", "CLUSTERING_COLUMN", "REGULAR", "STATIC" ]
          },
          "name" : {
            "type" : "string"
          },
          "order" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          },
          "position" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "name", "type" ]
      },
      "CompactRequest" : {
        "type" : "object",
        "properties" : {
          "end_token" : {
            "type" : "string"
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "split_output" : {
            "type" : "boolean"
          },
          "start_token" : {
            "type" : "string"
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "user_defined" : {
            "type" : "boolean"
          },
          "user_defined_files" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "keyspace_name", "split_output", "user_defined" ]
      },
      "CreateOrAlterKeyspaceRequest" : {
        "type" : "object",
        "properties" : {
          "keyspace_name" : {
            "type" : "string"
          },
          "replication_settings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReplicationSetting"
            }
          }
        },
        "required" : [ "keyspace_name", "replication_settings" ]
      },
      "CreateTableRequest" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Column"
            }
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "table_name" : {
            "type" : "string"
          }
        },
        "required" : [ "columns", "keyspace_name", "table_name" ]
      },
      "KeyspaceRequest" : {
        "type" : "object",
        "properties" : {
          "jobs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "jobs", "keyspace_name", "tables" ]
      },
      "RepairRequest" : {
        "type" : "object",
        "properties" : {
          "full" : {
            "type" : "boolean"
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "keyspace_name" ]
      },
      "ReplicationSetting" : {
        "type" : "object",
        "properties" : {
          "dc_name" : {
            "type" : "string"
          },
          "replication_factor" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "dc_name", "replication_factor" ]
      },
      "ScrubRequest" : {
        "type" : "object",
        "properties" : {
          "check_data" : {
            "type" : "boolean"
          },
          "disable_snapshot" : {
            "type" : "boolean"
          },
          "jobs" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keyspace_name" : {
            "type" : "string"
          },
          "reinsert_overflowed_ttl" : {
            "type" : "boolean"
          },
          "skip_corrupted" : {
            "type" : "boolean"
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "check_data", "disable_snapshot", "jobs", "keyspace_name", "reinsert_overflowed_ttl", "skip_corrupted", "tables" ]
      },
      "TakeSnapshotRequest" : {
        "type" : "object",
        "properties" : {
          "keyspace_tables" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "keyspaces" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "skip_flush" : {
            "type" : "boolean"
          },
          "snapshot_name" : {
            "type" : "string"
          },
          "table_name" : {
            "type" : "string"
          }
        }
      }
    }
  }
}