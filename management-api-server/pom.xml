<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright DataStax, Inc.

    Please see the included license file for details.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.k8ssandra</groupId>
    <artifactId>datastax-mgmtapi</artifactId>
    <version>${revision}</version>
  </parent>
  <version>${revision}</version>
  <artifactId>datastax-mgmtapi-server</artifactId>
  <properties>
    <guava.version>33.4.0-jre</guava.version>
    <airline.version>3.0.0</airline.version>
    <jaxrs.version>2.2.28</jaxrs.version>
    <resteasy.version>6.2.12.Final</resteasy.version>
    <awaitility.version>4.0.3</awaitility.version>
    <assertj.version>3.17.2</assertj.version>
    <servelet.version>6.1.0</servelet.version>
    <commons.io.version>2.17.0</commons.io.version>
    <apache.commons.lang3.version>3.17.0</apache.commons.lang3.version>
    <jakarta.activation.version>2.1.3</jakarta.activation.version>
    <jakarta.validation.version>3.1.0</jakarta.validation.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>io.k8ssandra</groupId>
      <artifactId>datastax-mgmtapi-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${apache.commons.lang3.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.rvesse</groupId>
      <artifactId>airline</artifactId>
      <version>${airline.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Jakarta dependencies to keep in sync -->
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
      <version>${jakarta.activation.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <version>${jakarta.validation.version}</version>
    </dependency>
    <!-- the next 3 Jackson dependnecies are here explictly to keep the versions
         the same as what we use in the common modules. They are normally pulled
         in transitively by swagger-jaxrs2-jakarta below -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-dataformat.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson-dataformat.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
      <artifactId>jackson-jakarta-rs-json-provider</artifactId>
      <version>${jackson-dataformat.version}</version>
      <exclusions>
        <exclusion>
          <groupId>jakarta.activation</groupId>
          <artifactId>jakarta.activation-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>jakarta.validation</groupId>
          <artifactId>jakarta.validation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- end of Jackson libraries to explicity declare -->
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-jaxrs2-jakarta</artifactId>
      <version>${jaxrs.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-yaml</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
          <artifactId>jackson-jakarta-rs-json-provider</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-netty4</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>jakarta.validation</groupId>
          <artifactId>jakarta.validation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>${netty.version}</version>
    </dependency>
    <dependency>
      <groupId>com.datastax.oss</groupId>
      <artifactId>java-driver-core</artifactId>
      <version>${driver.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.reactivestreams</groupId>
          <artifactId>reactive-streams</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>${servelet.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>com.github.docker-java</groupId>
      <artifactId>docker-java</artifactId>
      <version>${docker.java.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.github.docker-java</groupId>
          <artifactId>docker-java-transport-jersey</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.github.docker-java</groupId>
          <artifactId>docker-java-transport-netty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.docker-java</groupId>
      <artifactId>docker-java-transport-zerodep</artifactId>
      <version>${docker.java.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>check.cassandra.bin</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <condition property="cassandra.bin.exists">
                  <resourceexists>
                    <file file=".cassandra-bin/apache-cassandra-${cassandra4.version}/bin/cassandra"/>
                  </resourceexists>
                </condition>
              </target>
              <exportAntProperties>true</exportAntProperties>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>download.cassandra.bin</id>
            <phase>process-test-resources</phase>
            <configuration>
              <target unless="cassandra.bin.exists">
                <mkdir dir=".cassandra-bin"/>
                <get src="https://archive.apache.org/dist/cassandra/${cassandra4.version}/apache-cassandra-${cassandra4.version}-bin.tar.gz" dest=".cassandra-bin/"/>
                <untar src=".cassandra-bin/apache-cassandra-${cassandra4.version}-bin.tar.gz" dest=".cassandra-bin/" compression="gzip"/>
                <chmod file=".cassandra-bin/apache-cassandra-${cassandra4.version}/bin/cassandra" perm="777"/>
              </target>
              <skip>${skipTests}</skip>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <dseIncluded>${dseIncluded}</dseIncluded>
            <dockerFileRoot>${basedir}/..</dockerFileRoot>
            <CASSANDRA_HOME>${basedir}/.cassandra-bin/apache-cassandra-${cassandra4.version}</CASSANDRA_HOME>
          </systemPropertyVariables>
          <environmentVariables>
            <JVM_EXTRA_OPTS>-javaagent:${basedir}/../management-api-agent/target/datastax-mgmtapi-agent-4.x-${project.version}.jar</JVM_EXTRA_OPTS>
          </environmentVariables>
          <forkCount>1</forkCount>
          <threadCount>1</threadCount>
          <reuseForks>true</reuseForks>
          <skipTests>${skip.surefire.tests}</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <outputDirectory/>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <artifactSet>
            <includes>
              <include>*:*</include>
            </includes>
          </artifactSet>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.datastax.mgmtapi.Cli</mainClass>
                  <manifestEntries>
                    <Implementation-Version>${project.version}</Implementation-Version>
                  </manifestEntries>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-maven-plugin-jakarta</artifactId>
        <version>${jaxrs.version}</version>
        <configuration>
          <outputFileName>openapi</outputFileName>
          <outputPath>${project.basedir}/doc</outputPath>
          <outputFormat>JSON</outputFormat>
          <prettyPrint>TRUE</prettyPrint>
          <configurationFilePath>${project.basedir}/src/main/resources/openapi-configuration.json</configurationFilePath>
          <sortOutput>true</sortOutput>
          <skip>${skipOpenApi}</skip>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <id>go-clientgen</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>7.0.0-beta</version>
            <configuration>
              <inputSpec>${project.basedir}/doc/openapi.json</inputSpec>
              <generatorName>go</generatorName>
              <skip>${skipOpenApi}</skip>
              <output>${project.build.directory}/generated-sources/openapi/go-client</output>
            </configuration>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <id>java-clientgen</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>7.0.0-beta</version>
            <configuration>
              <inputSpec>${project.basedir}/doc/openapi.json</inputSpec>
              <generatorName>java</generatorName>
              <skip>${skipOpenApi}</skip>
              <output>${project.build.directory}/generated-sources/openapi/java-client</output>
              <apiPackage>com.datastax.mgmtapi.client.api</apiPackage>
              <modelPackage>com.datastax.mgmtapi.client.model</modelPackage>
              <invokerPackage>com.datastax.mgmtapi.client.invoker</invokerPackage>
              <groupId>${project.groupId}</groupId>
              <artifactId>datastax-mgmtapi-client-openapi</artifactId>
              <artifactVersion>${project.version}</artifactVersion>
              <!-- The following configuration options are documented here: https://openapi-generator.tech/docs/generators/java -->
              <configOptions>
                <artifactDescription>OpenAPI generated client for Management API for Apache Cassandra</artifactDescription>
                <artifactUrl>https://github.com/k8ssandra/managemenr-api-for-apache-cassandra</artifactUrl>
                <scmConnection>https://github.com/k8ssandra/management-api-for-apache-cassandra.git</scmConnection>
                <scmDeveloperConnection>https://github.com/k8ssandra/management-api-for-apache-cassandra.git</scmDeveloperConnection>
                <scmUrl>https://github.com/k8ssandra/management-api-for-apache-cassandra</scmUrl>
                <licenseName>Apache-2.0</licenseName>
              </configOptions>
            </configuration>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
