name: Maven Package
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup Github Package Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>gh</id>
                <username>$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')</username>
                <password>${GITHUB_TOKEN}</password>
              </server>
              <server>
                <id>artifactory-snapshots</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
              </server>
              <server>
                <id>artifactory-releases</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
              </server>
              <server>
                <id>artifactory</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
              </server>
              <server>
                <id>cloudsmith</id>
                <username>${{ secrets.CLOUDSMITH_USERNAME }}</username>
                <password>${{ secrets.CLOUDSMITH_PASSWORD }}</password>
              </server>
           </servers>
          </settings>
          EOF
      - name: Setup release version
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          RELEASE_VERSION="${RELEASE_VERSION:1}"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
      - name: Update pom with release version
        run: |
          mvn versions:set -DnewVersion=${{ env.RELEASE_VERSION }}
          mvn versions:update-child-modules -Pdse,dse7

#      - name: Deploy Artifacts to GitHub Packages
#        run: |
#          REPO="gh::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}"
#          mvn -B clean deploy \
#          -P dse,dse7 \
#          -Drevision="${{ env.RELEASE_VERSION }}" \
#          -DskipTests \
#          -DaltDeploymentRepository="${REPO}" \
#          -DaltSnapshotDeploymentRepository="${REPO}"

#      - name: Deploy Artifacts to Datsatx Artifactory
#        run: |
#          REPO="artifactory-releases::default::https://repo.datastax.com/artifactory/datastax-public-releases-local"
#          mvn -B clean deploy \
#          -P dse,dse7 \
#          -Drevision="${{ env.RELEASE_VERSION }}" \
#          -DskipTests \
#          -DaltDeploymentRepository="${REPO}" \
#          -DaltSnapshotDeploymentRepository="${REPO}"

      - name: Deploy Artifacts to Cloudsmith.io Artifactory
        run: |
          REPO="cloudsmith::default::https://maven.cloudsmith.io/thelastpickle/reaper-mvn/"
          mvn -B deploy \
          -P dse,dse7 \
          -DskipTests \
          -DaltDeploymentRepository="${REPO}" \
          -DaltSnapshotDeploymentRepository="${REPO}"

#      - name: Deploy OpenAPI client to GitHub Packages
#        run: |
#          REPO="gh::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}"
#          mvn -B deploy \
#          -f management-api-server/target/generated-sources/openapi/java-client/pom.xml \
#          -DskipTests \
#          -DaltDeploymentRepository="${REPO}" \
#          -DaltSnapshotDeploymentRepository="${REPO}"

#      - name: Deploy OpenAPI client to Datastax Artifactory
#        run: |
#          REPO="artifactory-releases::default::https://repo.datastax.com/artifactory/datastax-public-releases-local"
#          mvn -B deploy \
#          -f management-api-server/target/generated-sources/openapi/java-client/pom.xml \
#          -DskipTests \
#          -DaltDeploymentRepository="${REPO}" \
#          -DaltSnapshotDeploymentRepository="${REPO}"

      - name: Deploy OpenAPI client to Cloudsmith.io Artifactory
        run: |
          REPO="cloudsmith::default::https://maven.cloudsmith.io/thelastpickle/reaper-mvn/"
          mvn -B deploy \
          -f management-api-server/target/generated-sources/openapi/java-client/pom.xml \
          -DskipTests \
          -DaltDeploymentRepository="${REPO}" \
          -DaltSnapshotDeploymentRepository="${REPO}"
