name: Create Release and publish artifacts and Docker images

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    name: Build Release with Artifacts
    runs-on: ubuntu-latest
    steps:

      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Setup release version
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          RELEASE_VERSION="${RELEASE_VERSION:1}"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
      - name: Update pom with release version
        run: |
          mvn versions:set -DnewVersion=${{ env.RELEASE_VERSION }}
          mvn versions:update-child-modules -Pdse,hcd
      - name: Build with Maven
        run: |
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory-snapshots</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
              </server>
              <server>
                <id>artifactory-releases</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
             </server>
              <server>
                <id>artifactory</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
             </server>
           </servers>
          </settings>
          EOF
          mvn -q -ff clean package -Dskip.surefire.tests -DskipTests -DskipOpenApi -P dse,hcd
      - name: Save Maven cache
        uses: actions/cache/save@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Save Maven build artifacts
        uses: actions/cache/save@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: zip-up
        run: zip jars.zip */target/datastax-mgmtapi-*.jar
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{  github.ref_name }}
          draft: false
          prerelease: false
          files: jars.zip
  build-dse-68-ubuntu:
    needs: build-and-release
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        dse-version: [6.8.25, 6.8.26, 6.8.28, 6.8.29, 6.8.30, 6.8.31, 6.8.32, 6.8.33, 6.8.34, 6.8.35, 6.8.36, 6.8.37, 6.8.38, 6.8.39, 6.8.40, 6.8.41, 6.8.42, 6.8.43, 6.8.44, 6.8.46, 6.8.47, 6.8.48, 6.8.49, 6.8.50, 6.8.51, 6.8.52, 6.8.53, 6.8.54, 6.8.55, 6.8.56, 6.8.57, 6.8.58, 6.8.59]
        image-base: [jdk8, jdk11]
        include:
          - dse-version: 6.8.59
            latest: true
    runs-on: ubuntu-latest
    steps:
      - name: Restore build workspace
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - if: ${{ matrix.latest && matrix.image-base == 'jdk8' }}
        name: Publish ${{ matrix.dse-version }} (${{ matrix.image-base }}) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:6.8 \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-$RELEASE_VERSION \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.8.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .
      - if: ${{ matrix.latest && matrix.image-base != 'jdk8' }}
        name: Publish ${{ matrix.dse-version }} (${{ matrix.image-base }}) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:6.8-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.8.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .
      - if: ${{ !matrix.latest && matrix.image-base == 'jdk8' }}
        name: Publish ${{ matrix.dse-version }} (${{ matrix.image-base }}) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-$RELEASE_VERSION \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.8.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .
      - if: ${{ !matrix.latest && matrix.image-base != 'jdk8' }}
        name: Publish ${{ matrix.cassandra-version }} (${{ matrix.image-base }}) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.8.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .

  build-dse-68-ubi8:
    needs: build-dse-68-ubuntu
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        dse-version: [6.8.25, 6.8.26, 6.8.28, 6.8.29, 6.8.30, 6.8.31, 6.8.32, 6.8.33, 6.8.34, 6.8.35, 6.8.36, 6.8.37, 6.8.38, 6.8.39, 6.8.40, 6.8.41, 6.8.42, 6.8.43, 6.8.44, 6.8.46, 6.8.47, 6.8.48, 6.8.49, 6.8.50, 6.8.51, 6.8.52, 6.8.53, 6.8.54, 6.8.55, 6.8.56, 6.8.57, 6.8.58, 6.8.59]
        image-base: [ubi8]
        include:
          - dse-version: 6.8.59
            latest: true
    runs-on: ubuntu-latest
    steps:
      - name: Restore build workspace
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.dse-version }} (ubi) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:6.8-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:6.8-ubi \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.8.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }} (ubi) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.8.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .

# Cassandra 3.11 support is now deprecated
#  build-oss-3-11x:
#    strategy:
#      fail-fast: false
#      max-parallel: 4
#      matrix:
#        cassandra-version: [3.11.7, 3.11.8, 3.11.11, 3.11.12, 3.11.13, 3.11.14, 3.11.15, 3.11.16, 3.11.17]
#        include:
#          - cassandra-version: 3.11.16
#            latest: true
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#        with:
#          image: tonistiigi/binfmt:qemu-v7.0.0-28
#      - name: Setup Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v3
#        with:
#          version: latest
#      - name: Login to DockerHub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
#      - if: ${{ matrix.latest }}
#        name: Publish ${{ matrix.cassandra-version }} to Registry
#        run: |
#          RELEASE_VERSION="${GITHUB_REF##*/}"
#          docker buildx build --push \
#            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
#            --tag k8ssandra/cass-management-api:3.11 \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }} \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-$RELEASE_VERSION \
#            --file cassandra/Dockerfile-3.11 \
#            --target cassandra \
#            --platform linux/amd64,linux/arm64 .
#      - if: ${{ !matrix.latest }}
#        name: Publish ${{ matrix.cassandra-version }} to Registry
#        run: |
#          RELEASE_VERSION="${GITHUB_REF##*/}"
#          docker buildx build --push \
#            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }} \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-$RELEASE_VERSION \
#            --file cassandra/Dockerfile-3.11 \
#            --target cassandra \
#            --platform linux/amd64,linux/arm64 .
#      - if: ${{ matrix.latest }}
#        name: Publish ${{ matrix.cassandra-version }}-ubi to Registry
#        run: |
#          RELEASE_VERSION="${GITHUB_REF##*/}"
#          docker buildx build --push \
#            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
#            --tag k8ssandra/cass-management-api:3.11-ubi8 \
#            --tag k8ssandra/cass-management-api:3.11-ubi \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
#            --file cassandra/Dockerfile-3.11.ubi8 \
#            --target cassandra \
#            --platform linux/amd64,linux/arm64 .
#      - if: ${{ !matrix.latest }}
#        name: Publish ${{ matrix.cassandra-version }}-ubi8 to Registry
#        run: |
#          RELEASE_VERSION="${GITHUB_REF##*/}"
#          docker buildx build --push \
#            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
#            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
#            --file cassandra/Dockerfile-3.11.ubi8 \
#            --target cassandra \
#            --platform linux/amd64,linux/arm64 .

  build-oss-4-0x:
    needs: build-and-release
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        cassandra-version: [4.0.0, 4.0.1, 4.0.3, 4.0.4, 4.0.5, 4.0.6, 4.0.7, 4.0.8, 4.0.9, 4.0.10, 4.0.11, 4.0.12, 4.0.13, 4.0.14, 4.0.15, 4.0.17, 4.0.18]
        include:
          - cassandra-version: 4.0.18
            latest: true
    runs-on: ubuntu-latest
    steps:
      - name: Restore build workspace
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }} to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:4.0 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.0 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }} to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.0 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }}-ubi to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:4.0-ubi8 \
            --tag k8ssandra/cass-management-api:4.0-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.0.ubi8 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }}-ubi to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.0.ubi8 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .

  build-oss-4-1x:
    needs: build-and-release
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        cassandra-version: [4.1.0, 4.1.1, 4.1.2, 4.1.3, 4.1.4, 4.1.5, 4.1.6, 4.1.7, 4.1.8, 4.1.9]
        include:
          - cassandra-version: 4.1.9
            latest: true
    runs-on: ubuntu-latest
    steps:
      - name: Restore build workspace
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }} to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:4.1 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.1 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }} to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.1 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }}-ubi to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:4.1-ubi8 \
            --tag k8ssandra/cass-management-api:4.1-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:4.1-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.1.ubi8 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }}-ubi to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
            --file cassandra/Dockerfile-4.1.ubi8 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .

  build-oss-5-0x:
    needs: build-and-release
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        cassandra-version: [5.0.1, 5.0.2, 5.0.3, 5.0.4]
        include:
          - cassandra-version: 5.0.4
            latest: true
    runs-on: ubuntu-latest
    steps:
      - name: Restore build workspace
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }}-ubi to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:5.0-ubi8 \
            --tag k8ssandra/cass-management-api:5.0-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:5.0-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
            --file cassandra/Dockerfile-5.0.ubi8 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }}-ubi to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg CASSANDRA_VERSION=${{ matrix.cassandra-version }} \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8 \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag ghcr.io/k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi8-$RELEASE_VERSION \
            --tag k8ssandra/cass-management-api:${{ matrix.cassandra-version }}-ubi-$RELEASE_VERSION \
            --file cassandra/Dockerfile-5.0.ubi8 \
            --target cassandra \
            --platform linux/amd64,linux/arm64 .

  build-dse-69-ubuntu:
    needs: build-and-release
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        dse-version: [6.9.0, 6.9.1, 6.9.2, 6.9.3, 6.9.4, 6.9.5, 6.9.6, 6.9.7, 6.9.8, 6.9.9, 6.9.10, 6.9.11, 6.9.12]
        image-base: [jdk11]
        include:
          - dse-version: 6.9.12
            latest: true
    runs-on: ubuntu-latest
    steps:
      - name: Restore build workspace
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.dse-version }} (${{ matrix.image-base }}) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:6.9 \
            --tag datastax/dse-mgmtapi-6_8:6.9-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.9.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }} (${{ matrix.image-base }}) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.9.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .

  build-dse-69-ubi8:
    needs: build-dse-69-ubuntu
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        dse-version: [6.9.0, 6.9.1, 6.9.2, 6.9.3, 6.9.4, 6.9.5, 6.9.6, 6.9.7, 6.9.8, 6.9.9, 6.9.10, 6.9.11, 6.9.12]
        image-base: [ubi8]
        include:
          - dse-version: 6.9.12
            latest: true
    runs-on: ubuntu-latest
    steps:
      - name: Restore build workspace
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/management-api-for-apache-cassandra/management-api-for-apache-cassandra
          key: ${{ runner.os }}-workspace-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - if: ${{ matrix.latest }}
        name: Publish ${{ matrix.dse-version }} (ubi) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:6.9-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:6.9-ubi \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.9.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .
      - if: ${{ !matrix.latest }}
        name: Publish ${{ matrix.cassandra-version }} (ubi) to Registry
        run: |
          RELEASE_VERSION="${GITHUB_REF##*/}"
          docker buildx build --push \
            --build-arg DSE_VERSION=${{ matrix.dse-version }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }} \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-${{ matrix.image-base }}-$RELEASE_VERSION \
            --tag datastax/dse-mgmtapi-6_8:${{ matrix.dse-version }}-ubi-$RELEASE_VERSION \
            --file dse/Dockerfile-dse6.9.${{ matrix.image-base }} \
            --target dse \
            --platform linux/amd64 .

