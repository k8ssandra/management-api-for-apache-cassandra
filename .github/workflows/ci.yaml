name: Java CI

on: [push, pull_request]

jobs:
  build-oss:
    strategy:
      fail-fast: false
      matrix:
        cassandra-version: [3.11, 4.0, 4.1]
        include:
          - cassandra-version: 3.11
            run311tests: true
            run40tests: false
            run41tests: false
          - cassandra-version: 4.0
            run311tests: false
            run40tests: true
            run41tests: false
          - cassandra-version: 4.1
            run311tests: false
            run40tests: false
            run41tests: true

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      - name: Build with Maven and run tests
        run: |
          mvn -B -q install --file pom.xml -Drun311tests=${{ matrix.run311tests }} -Drun40tests=${{ matrix.run40tests }} -Drun41tests=${{ matrix.run41tests }}
  build-dse:
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      - name: Build with Maven and run tests
        run: |
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory-snapshots</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
              </server>
              <server>
                <id>artifactory-releases</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
             </server>
           </servers>
          </settings>
          EOF
          cp ~/.m2/settings.xml settings.xml
          mvn -B -q install --file pom.xml -P dse -DrunDSEtests=true
  publish-oss:
    name: Publish ${{ matrix.cassandra-version }} Cassandra image
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push'}}
    needs: build-oss
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - cassandra-version: '3.11'
            docker-file: Dockerfile-oss
            build-target: oss311
          - cassandra-version: '4.0'
            docker-file: Dockerfile-4_0
            build-target: oss40
          - cassandra-version: '4.1'
            docker-file: Dockerfile-4_1
            build-target: oss41
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
      # Setup metadata based on the commit/tag that will be used for tagging the image
      # Only build and publish a commit based tag
      - name: Setup Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: k8ssandra/cass-management-api
          tags: type=sha,prefix=${{ matrix.cassandra-version }}-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ${{ matrix.docker-file }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          target: ${{ matrix.build-target }}
  publish-dse:
    name: Publish DSE image
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push'}}
    needs: build-dse
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jdk-version: [jdk8, jdk11]
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
      - name: Setup Maven settings file
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory-snapshots</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
              </server>
              <server>
                <id>artifactory-releases</id>
                <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                <password>${{ secrets.ARTIFACTORY_PASSWORD }}</password>
             </server>
           </servers>
          </settings>
          EOF
          cp ~/.m2/settings.xml settings.xml
      # Setup metadata based on the commit/tag that will be used for tagging the image
      # Only build and publish a commit based tag
      - name: Setup Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: datastax/dse-mgmtapi-6_8
          tags: type=sha,prefix=dse68-${{ matrix.jdk-version }}-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: dse-68/Dockerfile.${{ matrix.jdk-version }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          target: dse68
